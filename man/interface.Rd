% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interface.R
\name{interface}
\alias{interface}
\title{Define an interface}
\usage{
interface(..., validate_on_access = FALSE, extends = list())
}
\arguments{
\item{properties}{A named list where names are property names and values are their expected types or validation functions.}
}
\value{
A function to create objects that implement the defined interface.
}
\description{
An interface defines a structure with specified properties and their types or validation functions. 
This is useful for ensuring that objects adhere to a particular format and type constraints.
}
\details{
The `interface` function creates a blueprint for objects, specifying what properties they must have and what types those properties must be. 
When an object is created using this interface, it ensures that the object adheres to these specifications.
}
\examples{
# Define an interface for a person
Person <- interface(
  name = character,
  age = numeric,
  email = character
)

# Create an object that implements the Person interface
john <- Person(
  name = "John Doe",
  age = 30,
  email = "john@example.com"
)

# Access properties
print(john$name)  # [1] "John Doe"

# Valid assignment
john$age <- c(10, 11)

# Invalid assignment (throws error)
try(john$age <- "thirty")
}
